@import '../../scss/variables.scss';

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  font-family: $btn-font-family;
  font-weight: get-font-weight($font-weight, medium);
  border: $btn-border-width solid transparent;
  border-radius: $btn-border-radius;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-decoration: none;
  position: relative;
  overflow: hidden;
  white-space: nowrap;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(get-color($primary, "500"), 0.2);
  }

  &:disabled,
  &--disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  // Sizes
  &--sm {
    padding: $btn-padding-y-sm $btn-padding-x-sm;
    font-size: $btn-font-size-sm;
    min-height: 36px;
  }

  &--md {
    padding: $btn-padding-y-md $btn-padding-x-md;
    font-size: $btn-font-size-md;
    min-height: 44px;
  }

  &--lg {
    padding: $btn-padding-y-lg $btn-padding-x-lg;
    font-size: $btn-font-size-lg;
    min-height: 52px;
  }

  // Variants
  &--primary {
    background: linear-gradient(135deg, get-color($primary, "600"), get-color($primary, "700"));
    color: get-color($primary, "foreground");
    border-color: get-color($primary, "600");
    box-shadow: 0 2px 8px rgba(get-color($primary, "600"), 0.2);

    &:hover:not(:disabled) {
      background: linear-gradient(135deg, get-color($primary, "700"), get-color($primary, "800"));
      transform: translateY(-1px);
      box-shadow: 0 4px 16px rgba(get-color($primary, "600"), 0.3);
    }

    &:active {
      transform: translateY(0);
    }
  }

  &--secondary {
    background: linear-gradient(135deg, get-color($secondary, "400"), get-color($secondary, "500"));
    color: get-color($secondary, "foreground");
    border-color: get-color($secondary, "400");
    box-shadow: 0 2px 8px rgba(get-color($secondary, "400"), 0.2);

    &:hover:not(:disabled) {
      background: linear-gradient(135deg, get-color($secondary, "500"), get-color($secondary, "600"));
      transform: translateY(-1px);
      box-shadow: 0 4px 16px rgba(get-color($secondary, "400"), 0.3);
    }
  }

  &--outline {
    background: transparent;
    color: get-color($primary, "600");
    border-color: get-color($primary, "300");

    &:hover:not(:disabled) {
      background: get-color($primary, "50");
      border-color: get-color($primary, "400");
      transform: translateY(-1px);
    }
  }

  &--ghost {
    background: transparent;
    color: get-color($primary, "600");
    border-color: transparent;

    &:hover:not(:disabled) {
      background: get-color($primary, "50");
      color: get-color($primary, "700");
    }
  }

  &--link {
    background: transparent;
    color: get-color($accent, "500");
    border: none;
    padding: $btn-link-padding-y $btn-link-padding-x;
    text-decoration: underline;
    text-underline-offset: 4px;

    &:hover:not(:disabled) {
      color: get-color($accent, "600");
      text-decoration-thickness: 2px;
    }
  }

  // Loading state
  &--loading {
    color: transparent;
  }

  &__spinner {
    position: absolute;
    width: 16px;
    height: 16px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    
    svg {
      width: 16px;
      height: 16px;
    }
  }

  &__text {
    display: flex;
    align-items: center;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// Responsive
@media (max-width: 768px) {
  .btn {
    &--lg {
      padding: $btn-padding-y-md $btn-padding-x-md;
      font-size: $btn-font-size-md;
      min-height: 44px;
    }
  }
}
